name: CI Tests - Maven Selenium with Allure Report

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Setup Google Chrome
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: Run Maven Tests
        # Executa os testes e gera os resultados brutos do Allure
        run: mvn clean test -Dtest=tests.register.RegisterUserTest,tests.login.LoginTest -B

      # Step para coletar os resultados brutos do Allure como um artefato
      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        if: always() # Sempre executa, mesmo que os testes falhem, para coletar os resultados
        with:
          name: allure-results
          path: target/allure-results
          retention-days: 5 # Define por quantos dias o artefato será retido

  # Novo job para gerar e publicar o Allure Report
  allure-report:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    needs: build-and-test # Este job depende do sucesso do job 'build-and-test'

    steps:
      # Step 1: Baixar os resultados brutos do Allure do job anterior
      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results # Baixa para um diretório chamado allure-results

      # Step 2: Gerar o relatório Allure e publicá-lo no GitHub Pages
      # Você precisará configurar o GitHub Pages para a branch 'gh-pages'
      # Veja: https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site
      - name: Generate and Publish Allure Report
        uses: simple-elf/allure-report-action@v1.9 # Action para Allure Report
        if: always() # Gerar o relatório mesmo que os testes falhem
        with:
          allure_results: allure-results # Diretório onde os resultados brutos estão
          gh_pages: gh-pages             # Nome da branch para publicar o relatório (pode ser diferente)
          allure_report: allure-report   # Diretório onde o relatório será gerado
          allure_history: allure-history # Para manter o histórico de execuções
          keep_reports: 20               # Número de relatórios para manter